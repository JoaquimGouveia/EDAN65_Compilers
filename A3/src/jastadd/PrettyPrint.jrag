import java.io.PrintStream;

aspect PrettyPrint {
    public void ASTNode.prettyPrint(PrintStream out) {
        prettyPrint(out, "");
        out.println();
    }

    public void ASTNode.prettyPrint(PrintStream out, String ind) {
      for (ASTNode child : astChildren()) {
          child.prettyPrint(out, ind);
        }
    }

    public void FuncDecl.prettyPrint(PrintStream out, String ind) {
       getIdDecl().prettyPrint(out, ind); 
       out.print("(");
       int nrParams = getNumParam();

       for (Param param : getParamList()) {
        param.prettyPrint(out, ind);
        nrParams--; 
        
        if (nrParams > 0){
            out.print(", ");
        }
       }
       out.print(")");

       block.prettyPrint(out, ind);
    }

    public void Param.prettyPrint(PrintStream out, String ind) {
        out.print("int ");
        out.print(getID());
    }

    public void Block.prettyPrint(PrintStream out, String ind) {
        out.print("{");
        for (Stmt stmt : getStmts()) {
            out.println(ind);
            stmt.prettyPrint(out, ind);
        }
        out.println("}");
    }

    public void IdDecl.prettyPrint(PrintStream out, String ind) {
        out.print(getID());
    }

    public void VarDeclStmt.prettyPrint(PrintStream out, String ind) {
        out.print("int ");
        getIdDecl().prettyPrint(out, ind);
        if (hasExpr()) {
            getExpr().prettyPrint(out, ind);
        } else {
            out.print(";");
        }
    }

    public void VarAssignStmt.prettyPrint(PrintStream out, String ind) {
        getIdUse.prettyPrint(out, ind);
        out.print(" = ");
        Numeral.prettyPrint(out, ind);
        out.print(";");
    }

    public void FunctionCallStmt.prettyPrint(PrintStream out, String ind) {
        getFunctionCall().prettyPrint(out, ind);
        out.print(";");
        
    }

    public void ReturnStmt.prettyPrint(PrintStream out, String ind) {
        out.print("return ");
        getExpr().prettyPrint(out, ind);
        out.print(";");
    }
    
    public void WhileStmt.prettyPrint(PrintStream out, String ind) {
        out.print("while (");
        getExpr().prettyPrint(out, ind);
        out.print(") ");
        getBlock().prettyPrint(out, ind);
    }

    public void IfStmt.prettyPrint(PrintStream out, String ind) {
        out.print("if (");
        getExpr().prettyPrint(out, ind);
        out.print(") ");
        getThenBlock().prettyPrint(out, ind);

        if (hasElseBlock()) {
            out.print(" else ");
            getElseBlock().prettyPrint(out, ind);
        }
    }

    public void FunctionCall.prettyPrint(PrintStream out, String ind) {
        getIdUse().prettyPrint(out, ind);
        out.print("(");

        int nrExprs = getNumExpr();

        for (Expr expr : getExprList()) {
            expr.prettyPrint(out, ind);

            nrExprs--;

            if (nrExprs > 0){
                out.print(", ");
            }
        }
        out.print(")");
    }

    public void Add.prettyPrint(PrintStream out, String ind) {
        getLeft().prettyPrint(out, ind);
        out.print(" + ");
        getRight().prettyPrint(out, ind);
    }

    public void Mul.prettyPrint(PrintStream out, String ind) {
        getLeft().prettyPrint(out, ind);
        out.print(" * ");
        getRight().prettyPrint(out, ind);
    }
    public void Div.prettyPrint(PrintStream out, String ind) {
        getLeft().prettyPrint(out, ind);
        out.print(" / ");
        getRight().prettyPrint(out, ind);
    }

    public void Sub.prettyPrint(PrintStream out, String ind) {
        getLeft().prettyPrint(out, ind);
        out.print(" - ");
        getRight().prettyPrint(out, ind);
    }
    public void Eq.prettyPrint(PrintStream out, String ind) {
        getLeft().prettyPrint(out, ind);
        out.print(" == ");
        getRight().prettyPrint(out, ind);
    }

    public void Neq.prettyPrint(PrintStream out, String ind) {
        getLeft().prettyPrint(out, ind);
        out.print(" != ");
        getRight().prettyPrint(out, ind);
    }
    public void Lt.prettyPrint(PrintStream out, String ind) {
        getLeft().prettyPrint(out, ind);
        out.print(" < ");
        getRight().prettyPrint(out, ind);
    }

    public void Gt.prettyPrint(PrintStream out, String ind) {
        getLeft().prettyPrint(out, ind);
        out.print(" > ");
        getRight().prettyPrint(out, ind);
    }
    public void Mod.prettyPrint(PrintStream out, String ind) {
        getLeft().prettyPrint(out, ind);
        out.print(" % ");
        getRight().prettyPrint(out, ind);
    }

    public void Le.prettyPrint(PrintStream out, String ind) {
        getLeft().prettyPrint(out, ind);
        out.print(" <= ");
        getRight().prettyPrint(out, ind);
    }

    public void Ge.prettyPrint(PrintStream out, String ind) {
        getLeft().prettyPrint(out, ind);
        out.print(" >= ");
        getRight().prettyPrint(out, ind);
    }

    public void Neq.prettyPrint(PrintStream out, String ind) {
       out.print("-");
       getExpr().prettyPrint(out, ind);
    }

    public void Numeral.prettyPrint(PrintStream out, String ind) {
       out.print(getNUMERAL());
    }

    public void IdUse.prettyPrint(PrintStream out, String ind) {
        out.print(getID());
    }
}
