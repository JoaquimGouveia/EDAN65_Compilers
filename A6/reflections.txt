COMMON MISTAKES (look out for):

• Not pushing function arguments in the correct order (from last to first).

• Not popping function arguments after a function call has returned.

• Not using small test programs. Small test programs are very useful because you are less likely to
run into multiple code generation bugs in the same test. If you find that a large test is failing, try
to break it up into smaller tests.

• Not using CQO before IDIV. This causes overflows and incorrect results. May result in “Floating
point exception” error messages.

• Note that floating point exceptions can be caused by integer overflows and integer division by zero.
Yes, it is confusing.




Exercise 3
Program 1:
Source code:
int main() {
    return 1;
}
Assembly code:
main:
    # Setup the stack frame
    pushq %rbp  # Save old base pointer (stack fram for main)
    movq %rsp, %rbp   # Set the new base pointer (current function's stack frame)

    # Function body of main
    movq $1, %rax # Place return value(1) in %rax

    # Teardown the stack frame
    movq %rbp, %rsp  # Restore stack pointer (teardown stack frame)
    popq %rbp  # Restore old base pointer

    # Exit the program using the system call for Exit
    



